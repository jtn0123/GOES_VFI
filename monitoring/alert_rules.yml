# Prometheus alert rules for GOES_VFI
groups:
  - name: goes_vfi_alerts
    rules:
      # Application availability
      - alert: ApplicationDown
        expr: up{job="goes-vfi"} == 0
        for: 30s
        labels:
          severity: critical
        annotations:
          summary: "GOES_VFI application is down"
          description: "GOES_VFI application has been down for more than 30 seconds"

      # High memory usage
      - alert: HighMemoryUsage
        expr: (process_resident_memory_bytes{job="goes-vfi"} / 1024 / 1024 / 1024) > 4
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "High memory usage detected"
          description: "GOES_VFI is using more than 4GB of memory"

      # High CPU usage
      - alert: HighCPUUsage
        expr: rate(process_cpu_seconds_total{job="goes-vfi"}[5m]) * 100 > 80
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High CPU usage detected"
          description: "GOES_VFI CPU usage is above 80% for 5 minutes"

      # Processing queue backlog
      - alert: ProcessingQueueBacklog
        expr: goes_vfi_processing_queue_size > 100
        for: 1m
        labels:
          severity: warning
        annotations:
          summary: "Processing queue backlog detected"
          description: "Processing queue has more than 100 pending items"

      # Error rate
      - alert: HighErrorRate
        expr: rate(goes_vfi_errors_total[5m]) > 0.1
        for: 2m
        labels:
          severity: critical
        annotations:
          summary: "High error rate detected"
          description: "Error rate is above 0.1 errors per second"

      # Disk space
      - alert: LowDiskSpace
        expr: (node_filesystem_avail_bytes{mountpoint="/"} / node_filesystem_size_bytes{mountpoint="/"}) * 100 < 10
        for: 1m
        labels:
          severity: warning
        annotations:
          summary: "Low disk space"
          description: "Disk space is below 10%"

  - name: infrastructure_alerts
    rules:
      # Redis down
      - alert: RedisDown
        expr: up{job="redis"} == 0
        for: 30s
        labels:
          severity: critical
        annotations:
          summary: "Redis is down"
          description: "Redis cache service is not responding"

      # PostgreSQL down
      - alert: PostgreSQLDown
        expr: up{job="postgres"} == 0
        for: 30s
        labels:
          severity: critical
        annotations:
          summary: "PostgreSQL is down"
          description: "PostgreSQL database is not responding"
